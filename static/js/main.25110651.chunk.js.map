{"version":3,"sources":["components/Navbar/Navbar.module.css","components/Header/Header.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Dialogs/Dialogs.module.css","components/Dialogs/DialogsItem/DialogsItem.module.css","components/Users/Users.module.css","components/Profile/MyPosts/Post/Post.module.css","assets/images/loading.svg","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Dialogs/Message/Message.module.css","assets/images/user.jpg","redux/dialogs-reducer.js","redux/friends-reducer.js","redux/profile-reducer.js","redux/users-reducer.js","redux/auth-reducer.js","redux/redux-store.js","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","components/Navbar/Navbar.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/common/Preloader/Preloader.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","components/Dialogs/DialogsItem/DialogsItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx","components/Users/Users.jsx","components/Users/UsersContainer.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","initialState","dialogs","id","name","avatar","messages","message","newMessageBody","dialogsReducer","state","action","type","body","firstName","lastName","img","friendsReducer","posts","likesCount","newPostText","profile","profileReducer","newPost","newText","users","pageSize","totalUsersCount","currentPage","isFetching","usersReducer","map","user","userId","followed","count","email","login","isAuth","authReducer","data","reducers","combineReducers","profilePage","dialogsPage","friends","usersPage","auth","store","createStore","Header","props","className","classes","header","src","alt","loginBlock","to","HeaderConstainer","axios","get","withCredentials","then","response","resultCode","setAuthUserData","this","React","Component","connect","Navbar","nav","item","activeClassName","active","Post","MyPosts","postElements","post","key","newPostElement","createRef","myPosts","style","marginBottom","onChange","text","current","value","apdateNewPostText","ref","placeholder","onClick","addPost","MyPostsContainer","dispatch","apdateNewPostTextActionCreator","Preloader","preloader","ProfileInfo","console","log","profileInfo","photos","large","fontWeight","aboutMe","fullName","Profile","ProfileContainer","match","params","setUserProfile","WithUrlDataContainerComponent","withRouter","DialogsItem","Message","Dialogs","dialogsElements","d","messageElements","m","dialogsItem","event","target","updateNewMessageBody","sandMessage","DialogsContainer","sendMessage","updateNewMessageBodyCreator","Users","pagesCount","Math","ceil","pages","i","push","page","selectedPage","onPageChanged","small","userPhoto","photo","unfollow","follow","status","UsersContainer","pageNumber","toggleIsFetching","setCurrentPage","setUsers","items","setTotalUsersCount","totalCount","App","path","render","Boolean","window","location","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.25110651.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__163ID\",\"item\":\"Navbar_item__3qlfo\",\"active\":\"Navbar_active__2kEef\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__379vO\",\"loginBlock\":\"Header_loginBlock__1k0fv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"myPosts\":\"MyPosts_myPosts__3op7U\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2dDvO\",\"dialogsItems\":\"Dialogs_dialogsItems__byXMY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"users\":\"DialogsItem_users__PLIaR\",\"active\":\"DialogsItem_active__2sHRR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"photo\":\"Users_photo__skfWZ\",\"selectedPage\":\"Users_selectedPage__iAGHi\",\"preloader\":\"Users_preloader__1ueHA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__KqBvM\"};","module.exports = __webpack_public_path__ + \"static/media/loading.dc2d7629.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileInfo\":\"ProfileInfo_profileInfo__3z6nT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messages\":\"Message_messages__3wLIV\",\"message\":\"Message_message__3Nz85\",\"button\":\"Message_button__1BloJ\"};","module.exports = __webpack_public_path__ + \"static/media/user.263d9e69.jpg\";","const APDATE_NEW_MESSAGE_BODY = \"APDATE-NEW-MESSAGE-BODY\";\r\nconst SEND_MESSAGE = \"SEND-MESSAGE\";\r\n\r\nlet initialState = {\r\n\tdialogs: [\r\n\t\t{\r\n\t\t\tid: 1,\r\n\t\t\tname: \"Татьяна\",\r\n\t\t\tavatar:\r\n\t\t\t\t\"https://avatarko.ru/img/avatar/28/devushka_brunetka_cosplay_27741.jpg\",\r\n\t\t},\r\n\t\t{\r\n\t\t\tid: 2,\r\n\t\t\tname: \"Николай\",\r\n\t\t\tavatar:\r\n\t\t\t\t\"https://avatarko.ru/img/avatar/31/muzhchina_shlyapa_galstuk_30949.jpg\",\r\n\t\t},\r\n\t\t{\r\n\t\t\tid: 3,\r\n\t\t\tname: \"Александра\",\r\n\t\t\tavatar: \"https://avatarko.ru/img/avatar/1/Batman_siluet.jpg\",\r\n\t\t},\r\n\t\t{\r\n\t\t\tid: 4,\r\n\t\t\tname: \"Евгений\",\r\n\t\t\tavatar:\r\n\t\t\t\t\"https://avatarko.ru/img/avatar/4/siluet_volk_luna_3945.jpg\",\r\n\t\t},\r\n\t\t{\r\n\t\t\tid: 5,\r\n\t\t\tname: \"Дмитрий\",\r\n\t\t\tavatar:\r\n\t\t\t\t\"https://shopsticker.ru/image/cache/catalog/image/rock/1-800x800.png\",\r\n\t\t},\r\n\t\t{\r\n\t\t\tid: 6,\r\n\t\t\tname: \"Мария\",\r\n\t\t\tavatar:\r\n\t\t\t\t\"https://avatarko.ru/img/avatar/3/devushka_brunetka_2748.jpg\",\r\n\t\t},\r\n\t],\r\n\tmessages: [\r\n\t\t{ id: 1, message: \"hi\" },\r\n\t\t{ id: 2, message: \"Привет\" },\r\n\t\t{ id: 3, message: \"helo\" },\r\n\t\t{ id: 4, message: \"bonjorno\" },\r\n\t\t{ id: 5, message: \"arigato\" },\r\n\t],\r\n\tnewMessageBody: \"\",\r\n};\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n\r\n\tswitch (action.type) {\r\n\t\tcase APDATE_NEW_MESSAGE_BODY:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tnewMessageBody: action.body\r\n\t\t\t};\r\n\r\n\t\tcase SEND_MESSAGE:\r\n\t\t\tlet body = state.newMessageBody;\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tnewMessageBody: \"\",\r\n\t\t\t\tmessages: [...state.messages, { id: 6, message: body }],\r\n\t\t\t};\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n\t\r\n};\r\n\r\nexport const sendMessageCreator = (id, sendMessage) => {\r\n\treturn {\r\n\t\ttype: SEND_MESSAGE,\r\n\t\tid,\r\n\t\tsendMessage,\r\n\t};\r\n};\r\nexport const updateNewMessageBodyCreator = (body) => {\r\n\treturn {\r\n\t\ttype: APDATE_NEW_MESSAGE_BODY,\r\n\t\tbody: body,\r\n\t};\r\n};\r\n\r\nexport default dialogsReducer;\r\n","let initialState = [\r\n   {\r\n      id: 1,\r\n      firstName: \"Михаил\",\r\n      lastName: \"Горбачев\",\r\n      img:\r\n         \"https://i.mycdn.me/i?r=AyH4iRPQ2q0otWIFepML2LxRtD8Rt4dOcNotQVv1NRj-6w\",\r\n   },\r\n   {\r\n      id: 2,\r\n      firstName: \"Мария\",\r\n      lastName: \"Семенова\",\r\n      img:\r\n         \"https://i.mycdn.me/i?r=AyH4iRPQ2q0otWIFepML2LxRWlSGblX1_1QRBvnp85UJSw\",\r\n   },\r\n   {\r\n      id: 3,\r\n      firstName: \"Дмитрий\",\r\n      lastName: \"Дятлов\",\r\n      img:\r\n         \"https://i.mycdn.me/i?r=AyH4iRPQ2q0otWIFepML2LxR8uOdKS9gpiAPnGAGovPPmw\",\r\n   },\r\n]\r\n\r\nconst friendsReducer = (state = initialState, action) => {\r\n   return state;\r\n}\r\n\r\nexport default friendsReducer;","const ADD_POST = \"ADD-POST\";\r\nconst APDATE_NEW_POST_TEXT = \"APDATE-NEW-POST-TEXT\";\r\nconst SET_USER_PROFILE = \"SET_USER_PROFILE\";\r\n\r\nlet initialState = {\r\n\tposts: [\r\n\t\t{ id: 1, message: \"Hi, how are you?\", likesCount: \"9\" },\r\n\t\t{ id: 2, message: \"It's my first post\", likesCount: \"15\" },\r\n\t],\r\n\tnewPostText: \"magmer.ru\",\r\n\tprofile: null\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase ADD_POST: {\r\n\t\t\tlet newPost = {\r\n\t\t\t\tid: 5,\r\n\t\t\t\tmessage: state.newPostText,\r\n\t\t\t\tlikesCount: 0,\r\n\t\t\t};\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tposts: [...state.posts, newPost],\r\n\t\t\t\tnewPostText: \"\"\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase APDATE_NEW_POST_TEXT: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tnewPostText: action.newText\r\n\t\t\t}\r\n\t\t}\r\n\t\tcase SET_USER_PROFILE: {\r\n\t\t\treturn {...state, profile: action.profile}\r\n\t\t}\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\nexport const addPostActionCreator = () => ({ type: ADD_POST });\r\n\r\nexport const setUserProfile = (profile) => ({ type: SET_USER_PROFILE, profile});\r\n\r\nexport const apdateNewPostTextActionCreator = (text) => {\r\n\treturn {\r\n\t\ttype: APDATE_NEW_POST_TEXT,\r\n\t\tnewText: text,\r\n\t};\r\n};\r\n\r\nexport default profileReducer;\r\n","const FOLLOW = \"FOLLOW\";\r\nconst UNFOLLOW = \"UNFOLLOW\";\r\nconst SET_USERS = \"SET_USERS\";\r\nconst SET_CURRENT_PAGE = \"SET_CURRENT_PAGE\";\r\nconst SET_TOTAL_USERS_COUNT = \"SET_TOTAL_USERS_COUNT\";\r\nconst TOGGLE_IS_FETCING  = \"TOGGLE_IS_FETCING\";\r\n\r\n\r\nconst initialState = {\r\n\tusers: [],\r\n\tpageSize: 100,\r\n\ttotalUsersCount: 0,\r\n\tcurrentPage: 1,\r\n\tisFetching: false\r\n};\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase FOLLOW:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tusers: state.users.map(user => {\r\n\t\t\t\t\tif (user.id === action.userId) {\r\n\t\t\t\t\t\treturn { ...user, followed: true }\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn user\r\n\t\t\t\t})\r\n\t\t\t};\r\n\t\tcase UNFOLLOW:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tusers: state.users.map(user => {\r\n\t\t\t\t\tif (user.id === action.userId) {\r\n\t\t\t\t\t\treturn { ...user, followed: false }\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn user\r\n\t\t\t\t})\r\n\t\t\t};\r\n\t\tcase SET_USERS: {\r\n\t\t\treturn { ...state, users: [...action.users] }\r\n\t\t}\r\n\t\tcase SET_CURRENT_PAGE: {\r\n\t\t\treturn { ...state, currentPage: action.currentPage }\r\n\t\t}\r\n\t\tcase SET_TOTAL_USERS_COUNT: {\r\n\t\t\treturn { ...state, totalUsersCount: action.count }\r\n\t\t}\r\n\t\tcase TOGGLE_IS_FETCING: {\r\n\t\t\treturn { ...state, isFetching: action.isFetching }\r\n\t\t}\r\n\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\nexport const follow = (userId) => {\r\n\treturn { type: FOLLOW, userId };\r\n};\r\nexport const unfollow = (userId) => {\r\n\treturn { type: UNFOLLOW, userId };\r\n};\r\nexport const setUsers = (users) => {\r\n\treturn { type: SET_USERS, users };\r\n};\r\nexport const setCurrentPage = (currentPage) => {\r\n\treturn { type: SET_CURRENT_PAGE, currentPage };\r\n};\r\nexport const setTotalUsersCount = (totalUsersCount) => {\r\n\treturn { type: SET_TOTAL_USERS_COUNT, count: totalUsersCount };\r\n};\r\nexport const toggleIsFetching = (isFetching) => {\r\n\treturn { type: TOGGLE_IS_FETCING, isFetching };\r\n};\r\n\r\nexport default usersReducer;\r\n\r\n// Reducer - это функция через которую происходит модификация state\r\n","const SET_USER_DATA = \"SET_USER_DATA\";\r\n\r\n\r\nconst initialState = {\r\n    userId: null,\r\n    email: null,\r\n\tlogin: null,\r\n\tisAuth: false\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase SET_USER_DATA:\r\n\t\t\treturn {\r\n                ...state,\r\n                ...action.data,\r\n\t\t\t\tisAuth: true\r\n\t\t\t};\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\nexport const setAuthUserData = (userId, email, login) => {\r\n\treturn { type: SET_USER_DATA, data: {userId, email, login} };\r\n};\r\n\r\nexport default authReducer;\r\n\r\n// Reducer - это функция через которую происходит модификация state\r\n","import { combineReducers, createStore } from \"redux\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport friendsReducer from \"./friends-reducer\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\n\r\nlet reducers = combineReducers({\r\n\tprofilePage: profileReducer,\r\n\tdialogsPage: dialogsReducer,\r\n\tfriends: friendsReducer,\r\n\tusersPage: usersReducer,\r\n\tauth: authReducer \r\n});\r\n\r\nlet store = createStore(reducers);\r\n\r\nexport default store;","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport classes from \"./Header.module.css\"\r\n\r\n\r\nconst Header = (props) => {\r\n\treturn (\r\n\t\t<header className={classes.header}>\r\n\t\t\t<img src={props.img} alt=\"logo\" />\r\n\r\n\t\t\t<div className={classes.loginBlock}>\r\n\t\t\t\t{props.isAuth ? props.login : <NavLink to={`/login`}>Login</NavLink>}\r\n\t\t\t</div>\r\n\t\t</header>\r\n\t);\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport Header from \"./Header\";\r\nimport axios from \"axios\";\r\nimport { connect } from \"react-redux\";\r\nimport {setAuthUserData} from \"../../redux/auth-reducer\";\r\n\r\n\r\nclass HeaderConstainer extends React.Component {\r\n\r\n\tcomponentDidMount() {\r\n        axios.get(`https://social-network.samuraijs.com/api/1.0/auth/me`, {\r\n\t\t\twithCredentials: true\r\n\t\t})\r\n            .then(response => {\r\n                if(response.data.resultCode === 0) {\r\n\t\t\t\t\tlet {id, email, login} = response.data.data;\r\n\t\t\t\t\tthis.props.setAuthUserData(id, email, login)\r\n\t\t\t\t}\r\n            })\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<Header {...this.props}/>\r\n\t\t);\r\n\t}\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn(\r\n\t\t{\r\n\t\t\tisAuth: state.auth.isAuth,\r\n\t\t\tlogin: state.auth.login\r\n\t\t}\r\n\t)\r\n}\r\n\r\nexport default connect(mapStateToProps, {setAuthUserData})(HeaderConstainer);\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport classes from \"./Navbar.module.css\";\r\n// import Friends from \"../Friends/Friends\";\r\n\r\n\r\nconst Navbar = (props) => {\r\n\t\r\n\treturn (\r\n\t\t<nav className={classes.nav}>\r\n\t\t\t<ul>\r\n\t\t\t\t<li className={classes.item}><NavLink to=\"/profile\" activeClassName={classes.active}>Profile</NavLink></li>\r\n\t\t\t\t<li className={classes.item}><NavLink to=\"/dialogs\" activeClassName={classes.active}>Message</NavLink></li>\r\n\t\t\t\t<li className={classes.item}><NavLink to=\"/users\">Users</NavLink></li>\r\n\t\t\t\t<li className={classes.item}>Main content</li>\r\n\t\t\t\t<li className={classes.item}>News</li>\r\n\t\t\t\t<li className={classes.item}>Music</li>\r\n\t\t\t\t<li className={classes.item}>Settings</li>\r\n\t\t\t</ul>\r\n\t\t\t{/* <Friends friends={props.friends}/> */}\r\n\t\t</nav>\r\n\t);\r\n};\r\n\r\nexport default Navbar;","import React from \"react\";\r\nimport classes from \"./Post.module.css\";\r\n\r\nconst Post = (props) => {\r\n\r\n\treturn (\r\n\t\t<div className={classes.item}>\r\n\t\t\t<img\r\n\t\t\t\tsrc=\"https://www.paulseward.com/downloads/Avatars/cartoon_avatar.png\"\r\n\t\t\t\talt=\"avatar\"\r\n\t\t\t/>\r\n\t\t\t{props.message}\r\n\t\t\t<div>\r\n\t\t\t\t<span>{`Like ${props.likesCount}`}</span>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Post;","import React from \"react\";\r\nimport classes from \"./MyPosts.module.css\";\r\nimport Post from \"./Post/Post\";\r\n\r\n\r\nconst MyPosts = (props) => {\r\n\r\n\tconst postElements = props.posts.map((post) => (\r\n\t\t<Post message={post.message} likesCount={post.likesCount} key={post.id} />\r\n\t));\r\n\r\n\tlet newPostElement = React.createRef();\r\n\r\n\tconst onAddPost = () => {\r\n\t\tprops.addPost()\r\n\t};\r\n\r\n\tconst onPostChange = () => {\r\n\t\tlet text = newPostElement.current.value;\r\n\t\tprops.apdateNewPostText(text)\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className={classes.myPosts}>\r\n\t\t\t<h3>Мои посты</h3>\r\n\t\t\t<div style={{ marginBottom: \"20px\" }}>\r\n\t\t\t\t<textarea\r\n\t\t\t\t\tonChange={onPostChange}\r\n\t\t\t\t\tvalue={props.newPostText}\r\n\t\t\t\t\tref={newPostElement}\r\n\t\t\t\t\tplaceholder=\"Укажите текст поста\"\r\n\t\t\t\t/>\r\n\t\t\t\t<button onClick={onAddPost}>Добавить пост</button>\r\n\t\t\t</div>\r\n\t\t\t<div className={classes.posts}>{postElements}</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default MyPosts;\r\n","import { connect } from \"react-redux\";\r\nimport {\r\n\taddPostActionCreator,\r\n\tapdateNewPostTextActionCreator,\r\n} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\n\r\n// const MyPostsContainer = (props) => {\r\n// \tlet state = props.store.getState();\r\n\r\n// \tconst addPost = () => {\r\n// \t\tprops.store.dispatch(addPostActionCreator());\r\n// \t};\r\n\r\n// \tconst onPostChange = (text) => {\r\n// \t\tlet action = apdateNewPostTextActionCreator(text);\r\n// \t\tprops.store.dispatch(action);\r\n// \t};\r\n\r\n// \treturn (\r\n// \t\t<MyPosts\r\n// \t\t\tapdateNewPostText={onPostChange}\r\n// \t\t\taddPost={addPost}\r\n// \t\t\tposts={state.profilePage.posts}\r\n// \t\t\tnewPostText={state.profilePage.newPostText}\r\n// \t\t/>\r\n// \t);\r\n// };\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tposts: state.profilePage.posts,\r\n\t\tnewPostText: state.profilePage.newPostText\r\n\t}\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n\treturn {\r\n\t\taddPost: () => {\r\n\t\t\tdispatch(addPostActionCreator())\r\n\t\t},\r\n\t\tapdateNewPostText: (text) => {\r\n\t\t\tlet action = apdateNewPostTextActionCreator(text);\r\n\t\t\tdispatch(action);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\r\n\r\nexport default MyPostsContainer;","import React from 'react'\r\nimport preloader from \"../../../assets/images/loading.svg\";\r\n\r\nconst Preloader = () => {\r\n    return (\r\n        <div>\r\n            <img src={preloader} alt=\"preloader\" />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Preloader\r\n","import React from \"react\";\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport classes from \"./ProfileInfo.module.css\";\r\n\r\nconst ProfileInfo = (props) => {\r\n\t\tconsole.log(props)\r\n\tif(!props.profile) {\r\n\t\treturn(\r\n\t\t\t<Preloader />\r\n\t\t)\r\n\t}\r\n\t\r\n\treturn (\r\n\t\t<div className={classes.profileInfo}>\r\n\t\t\t<figure>\r\n\t\t\t\t<img\r\n\t\t\t\t\tsrc=\"https://wowslider.net/local-sliders/demo-10/data1/images/road220058.jpg\"\r\n\t\t\t\t\talt={`qweqwe`}\r\n\t\t\t\t/>\r\n\t\t\t</figure>\r\n\t\t\t<div>\r\n\t\t\t\t<img src={props.profile.photos.large} alt=\"wefrr\"/>\r\n\t\t\t\t<p><span style={{fontWeight: \"600\"}}>Статус: </span>{props.profile.aboutMe}</p>\r\n\t\t\t\t<p><span style={{fontWeight: \"600\"}}>ФИО: </span>{props.profile.fullName}</p>\r\n\t\t\t\t<p><span style={{fontWeight: \"600\"}}>Работа: </span>{props.profile.fullName}</p>\r\n\t\t\t\tavatar + description\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default ProfileInfo;\r\n","import React from \"react\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\n\r\nconst Profile = (props) => {\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<ProfileInfo profile={props.profile} />\r\n\t\t\t<MyPostsContainer />\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Profile;","import React, { Component } from 'react'\r\nimport Profile from './Profile'\r\nimport { setUserProfile } from \"../../redux/profile-reducer\";\r\nimport { connect } from 'react-redux';\r\nimport * as axios from \"axios\";\r\nimport { withRouter } from 'react-router-dom';\r\n\r\n\r\nexport class ProfileContainer extends Component {\r\n\r\n\tcomponentDidMount() {\r\n\t\tlet userId = this.props.match.params.userId\r\n\t\tif(!userId) userId = 2\r\n\t\taxios.get(`https://social-network.samuraijs.com/api/1.0/profile/${userId}`)\r\n\t\t\t.then(response => { this.props.setUserProfile(response.data) })\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<Profile {...this.props} profile={this.props.profile} />\r\n\t\t)\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tprofile: state.profilePage.profile\r\n\t}\r\n}\r\n\r\nconst WithUrlDataContainerComponent = withRouter(ProfileContainer)\r\n\r\nexport default connect(mapStateToProps, { setUserProfile })(WithUrlDataContainerComponent)","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport classes from \"./DialogsItem.module.css\";\r\n\r\nconst DialogsItem = (props) => {\r\n\r\n\treturn (\r\n\t\t<div className={classes.users}>\r\n\t\t\t<NavLink to={`/dialogs/${props.id}`} activeClassName={classes.active}>\r\n\t\t\t\t<figure>\r\n\t\t\t\t\t<img src={props.avatar} alt={`${props.name} ${props.id}`}/>\r\n\t\t\t\t</figure>\r\n\t\t\t\t{props.name}\r\n\t\t\t</NavLink>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default DialogsItem;\r\n","import React from \"react\";\r\nimport classes from \"./Message.module.css\";\r\n\r\n\r\nconst Message = (props) => {\r\n\r\n\treturn (\r\n\t\t<div className={classes.message}>{props.message}</div>\r\n\t);\r\n};\r\n\r\nexport default Message;\r\n","import React from \"react\";\r\nimport classes from \"./Dialogs.module.css\";\r\nimport DialogsItem from \"./DialogsItem/DialogsItem\";\r\nimport Message from \"./Message/Message\";\r\n\r\nconst Dialogs = (props) => {\r\n\t\r\n\tlet state = props.dialogsPage;\r\n\r\n\tlet dialogsElements = state.dialogs.map((d) => (\r\n\t\t<DialogsItem name={d.name} id={d.id} avatar={d.avatar} key={d.id}/>\r\n\t));\r\n\tlet messageElements = state.messages.map((m) => (\r\n\t\t<Message message={m.message} key={m.id} />\r\n\t));\r\n\r\n\tlet newMessageBody = state.newMessageBody;\r\n\r\n\r\n\tlet onSandMessageClick = () => {\r\n\t\tprops.sandMessage()\r\n\t}\r\n\r\n\tlet onNewMessageChange = (event) => {\r\n\t\tlet body = event.target.value;\r\n\t\tprops.updateNewMessageBody(body);\r\n\t}\r\n\r\n\r\n\treturn (\r\n\t\t<div className={classes.dialogs}>\r\n\t\t\t<div className={classes.dialogsItem}>{dialogsElements}</div>\r\n\t\t\t<div className=\"messages\">\r\n\t\t\t\t<div>{messageElements}</div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<div><textarea placeholder=\"Введите текст сообщения\" value={newMessageBody} onChange={onNewMessageChange} /></div>\r\n\t\t\t\t\t<div><button onClick={onSandMessageClick}>Отправить сообщение</button></div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Dialogs;\r\n","import { connect } from \"react-redux\";\r\nimport {\r\n\tupdateNewMessageBodyCreator,\r\n\tsendMessageCreator,\r\n} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\n\r\n// const DialogsContainer = (props) => {\r\n// \tlet state = props.store.getState().dialogsPage;\r\n\r\n// \tlet onSandMessageClick = () => {\r\n// \t\tprops.store.dispatch(sendMessageCreator());\r\n// \t};\r\n\r\n// \tlet onNewMessageChange = (body) => {\r\n// \t\tprops.store.dispatch(updateNewMessageBodyCreator(body));\r\n// \t};\r\n\r\n// \treturn (\r\n// \t\t<Dialogs\r\n// \t\t\tupdateNewMessageBody={onNewMessageChange}\r\n// \t\t\tsandMessage={onSandMessageClick}\r\n// \t\t\tdialogsPage={state}\r\n// \t\t/>\r\n// \t);\r\n// };\r\n\r\nlet mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tdialogsPage: state.dialogsPage,\r\n\t};\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n\treturn {\r\n\t\tsandMessage: () => {\r\n\t\t\tdispatch(sendMessageCreator());\r\n\t\t},\r\n\t\tupdateNewMessageBody: (body) => {\r\n\t\t\tdispatch(updateNewMessageBodyCreator(body));\r\n\t\t},\r\n\t};\r\n};\r\n\r\nconst DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(Dialogs);\r\n\r\nexport default DialogsContainer;\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport userPhoto from \"../../assets/images/user.jpg\"\r\nimport classes from \"./Users.module.css\";\r\n\r\nconst Users = (props) => {\r\n    let pagesCount = Math.ceil(props.totalUsersCount / props.pageSize);\r\n    // let pagesCount = Math.ceil(50 / props.pageSize);\r\n\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {pages.map(page => {\r\n                return (\r\n                    <span className={props.currentPage === page && classes.selectedPage} onClick={() => { props.onPageChanged(page) }}>{page}</span>\r\n                )\r\n            })}\r\n            {\r\n                props.users.map(\r\n                    (user) => {\r\n                        return (\r\n                            <div key={user.id}>\r\n                                <span>\r\n                                    <div>\r\n                                        <NavLink to={`/profile/${user.id}`}>\r\n                                            <img\r\n                                                src={user.photos.small != null ? user.photos.small : userPhoto}\r\n                                                className={classes.photo}\r\n                                                alt={user.id}\r\n                                            />\r\n                                        </NavLink>\r\n                                    </div>\r\n                                    <div>\r\n                                        {\r\n                                            user.followed\r\n                                                ? (<button onClick={() => { props.unfollow(user.id); }}>unfollow</button>)\r\n                                                : (<button onClick={() => { props.follow(user.id) }}>Follow</button>)\r\n                                        }\r\n                                    </div>\r\n                                </span>\r\n                                <span>\r\n                                    <span>\r\n                                        <div>{user.name}</div>\r\n                                        <div>{user.status}</div>\r\n                                    </span>\r\n                                    <span>\r\n                                        <div>{\"user.location.country\"}</div>\r\n                                        <div>{\"user.location.city\"}</div>\r\n                                    </span>\r\n                                </span>\r\n                            </div>\r\n                        )\r\n                    }\r\n                )\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Users;\r\n","import React from 'react';\r\nimport * as axios from \"axios\";\r\nimport Users from \"./Users\";\r\nimport { connect } from 'react-redux';\r\nimport { follow, unfollow, setUsers, setCurrentPage, setTotalUsersCount, toggleIsFetching } from \"../../redux/users-reducer\";\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\n\r\nclass UsersContainer extends React.Component {\r\n\r\n\r\n    componentDidMount() {\r\n        this.props.toggleIsFetching(true)\r\n        axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${this.props.currentPage}&count=${this.props.pageSize}`)\r\n            .then(response => {\r\n                this.props.toggleIsFetching(false)\r\n                this.props.setUsers(response.data.items)\r\n                this.props.setTotalUsersCount(response.data.totalCount)\r\n            })\r\n    }\r\n\r\n    onPageChanged = (pageNumber) => {\r\n        this.props.toggleIsFetching(true)\r\n        this.props.setCurrentPage(pageNumber)\r\n        axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${pageNumber}&count=${this.props.pageSize}`)\r\n            .then(response => {\r\n                this.props.toggleIsFetching(false);\r\n                this.props.setUsers(response.data.items)\r\n            })\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            {this.props.isFetching ? <Preloader /> : null}\r\n            <Users\r\n                totalUsersCount={this.props.totalUsersCount}\r\n                pageSize={this.props.pageSize}\r\n                currentPage={this.props.currentPage}\r\n                onPageChanged={this.onPageChanged}\r\n                users={this.props.users}\r\n                follow={this.props.follow}\r\n                unfollow={this.props.unfollow}\r\n            />\r\n        </>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        users: state.usersPage.users,\r\n        pageSize: state.usersPage.pageSize,\r\n        totalUsersCount: state.usersPage.totalUsersCount,\r\n        currentPage: state.usersPage.currentPage,\r\n        isFetching: state.usersPage.isFetching\r\n    }\r\n}\r\n\r\n// const mapDispatchToProps = (dispatch) => {\r\n//     return {\r\n//         follow: (userId) => {\r\n//             dispatch(followAC(userId))\r\n//         },\r\n//         unfollow: (userId) => {\r\n//             dispatch(unfollowAC(userId))\r\n//         },\r\n//         setUsers: (users) => {\r\n//             dispatch(setUsersAC(users))\r\n//         },\r\n//         setCurrentPage: (pageNumber) => {\r\n//             dispatch(setCurrentPageAC(pageNumber))\r\n//         },\r\n//         setTotalUsersCount: (totalCount) => {\r\n//             dispatch(setUsersTotalCountAC(totalCount))\r\n//         },\r\n//         toggleIsFetching: (isFetching) => {\r\n//             dispatch(toggleIsFetchingAC(isFetching))\r\n//         }\r\n//     }\r\n// }\r\n\r\n\r\nconst dispatch = { follow, unfollow, setUsers, setCurrentPage, setTotalUsersCount, toggleIsFetching, }\r\n\r\n\r\nexport default connect(mapStateToProps, dispatch)(UsersContainer)\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport HeaderConstainer from \"./components/Header/HeaderContainer\";\r\nimport Navbar from \"./components/Navbar/Navbar\";\r\nimport ProfileContainer from \"./components/Profile/ProfileContainer\";\r\nimport DialogsContainer from \"./components/Dialogs/DialogsContainer\";\r\nimport { BrowserRouter, Route } from \"react-router-dom\";\r\nimport UsersContainer from \"./components/Users/UsersContainer\";\r\n\r\nconst App = (props) => {\r\n\treturn (\r\n\t\t<BrowserRouter>\r\n\t\t\t<div className=\"app-wrapper\">\r\n\t\t\t\t<HeaderConstainer img=\"https://bower.io/img/bower-logo.png\" />\r\n\t\t\t\t<Navbar friends={props.state} />\r\n\t\t\t\t<div className=\"app-wrapper-content\">\r\n\t\t\t\t\t<Route\r\n\t\t\t\t\t\tpath=\"/profile/:userId?\"\r\n\t\t\t\t\t\trender={() => <ProfileContainer store={props.store} />}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Route\r\n\t\t\t\t\t\tpath=\"/dialogs\"\r\n\t\t\t\t\t\trender={() => <DialogsContainer store={props.store} />}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Route path=\"/users\" render={() => <UsersContainer />} />\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</BrowserRouter>\r\n\t);\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import \"./index.css\";\r\nimport store from \"./redux/redux-store\";\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { Provider } from \"react-redux\";\r\n\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n\t\t<Provider store={store}>\r\n\t\t\t<App\r\n\t\t\t\tstore={store}\r\n\t\t\t/>\r\n\t\t</Provider>\r\n\t</React.StrictMode>,\r\n\tdocument.getElementById(\"root\")\r\n);\r\n\r\nserviceWorker.unregister();"],"sourceRoot":""}