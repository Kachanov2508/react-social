{"version":3,"sources":["components/Profile/MyPosts/Post/Post.module.css","assets/images/loading.svg","components/Dialogs/Message/Message.module.css","assets/images/user.jpg","components/Navbar/Navbar.module.css","utils/validators/validators.jsx","redux/dialogs-reducer.js","redux/friends-reducer.js","api/api.js","redux/profile-reducer.js","redux/users-reducer.js","redux/auth-reducer.js","redux/redux-store.js","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","components/Navbar/Navbar.jsx","components/Profile/MyPosts/Post/Post.jsx","components/common/FormsControls/FormsControls.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/common/Preloader/Preloader.jsx","components/Profile/ProfileInfo/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","hoc/withAuthRedirect.js","components/Profile/ProfileContainer.jsx","components/Dialogs/DialogsItem/DialogsItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx","components/Users/Users.jsx","redux/users-selectors.js","components/Users/UsersContainer.jsx","components/Login/Login.jsx","App.js","serviceWorker.js","index.js","components/common/FormsControls/FormsControls.module.css","components/Header/Header.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Dialogs/Dialogs.module.css","components/Dialogs/DialogsItem/DialogsItem.module.css","components/Users/Users.module.css"],"names":["module","exports","maxLength","initialState","dialogs","id","name","avatar","messages","message","dialogsReducer","state","action","type","body","newMessageBody","firstName","lastName","img","friendsReducer","instance","axios","create","withCredentials","baseURL","headers","usersAPI","currentPage","pageSize","get","then","response","data","userId","post","delete","console","warn","profileAPI","getProfile","getStatus","updateStatus","status","put","authAPI","email","password","rememberMe","posts","likesCount","profile","setStatus","profileReducer","newPost","newPostText","users","totalUsersCount","isFetching","followingProgress","setCurrentPage","setTotalUsersCount","count","toggleIsFetching","toggleFollowingProgress","usersReducer","map","user","followed","filter","login","isAuth","getAuthUserData","dispatch","resultCode","payload","setAuthUserData","authReducer","reducers","combineReducers","profilePage","dialogsPage","friends","usersPage","auth","form","formReducer","store","createStore","applyMiddleware","thunkMiddleWare","Header","props","className","classes","header","src","alt","loginBlock","onClick","logout","to","HeaderConstainer","this","React","Component","connect","Navbar","nav","item","activeClassName","active","Post","required","value","TextArea","input","meta","hasError","touched","error","formControl","Input","maxLength10","length","AddNewPostFormRedux","reduxForm","onSubmit","handleSubmit","Field","placeholder","component","validate","MyPosts","postElements","key","myPosts","values","addPost","MyPostsContainer","addPostActionCreator","Preloader","preloader","ProfileStatus","editMode","activatEditMode","log","setState","deactivatEditMode","onStatusChange","e","currentTarget","prevProps","prevState","onDoubleClick","onChange","autoFocus","onBlur","ProfileInfo","profileInfo","info","photos","large","style","fontWeight","aboutMe","fullName","Profile","withAuthRedirect","AuthRedirectComponent","match","params","authorizedUserId","getUserProfile","WithUrlDataContainerComponent","withRouter","DialogsItem","Message","AddMessageFormRedux","dialogsElements","d","messageElements","m","dialogsItem","sandMessage","DialogsContainer","sendMessageCreator","Users","pagesCount","Math","ceil","pages","i","push","page","selectedPage","onPageChanged","small","userPhoto","photo","disabled","some","unfollow","follow","getUsersSelector","getPageSizeSelector","getTotalUsersCountSelector","getCurrentPageSelector","getIsFetchingSelector","getFollowingProgressSelector","UsersContainer","pageNumber","getUsers","followSuccess","unfollowSuccess","items","totalCount","LoginReduxForm","formSummaryError","stopSubmit","_error","formData","App","path","render","Boolean","window","location","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.53f61ff7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__MOCE5\"};","module.exports = __webpack_public_path__ + \"static/media/loading.dc2d7629.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messages\":\"Message_messages__1EC_y\",\"message\":\"Message_message__2xzw6\",\"button\":\"Message_button__1MwPl\"};","module.exports = __webpack_public_path__ + \"static/media/user.263d9e69.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__2UZlG\",\"item\":\"Navbar_item__2zOV5\",\"active\":\"Navbar_active__33t2P\"};","export const required = value => {\r\n    if(value) {\r\n        return undefined\r\n    } else {\r\n        return \"Field is required\"\r\n    }\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if(value.length > maxLength) {\r\n        return `Max length is ${maxLength} symbols`\r\n    } else {\r\n        return undefined\r\n    }\r\n}","const SEND_MESSAGE = \"SEND-MESSAGE\";\r\n\r\nlet initialState = {\r\n\tdialogs: [\r\n\t\t{\r\n\t\t\tid: 1,\r\n\t\t\tname: \"Татьяна\",\r\n\t\t\tavatar:\r\n\t\t\t\t\"https://avatarko.ru/img/avatar/28/devushka_brunetka_cosplay_27741.jpg\",\r\n\t\t},\r\n\t\t{\r\n\t\t\tid: 2,\r\n\t\t\tname: \"Николай\",\r\n\t\t\tavatar:\r\n\t\t\t\t\"https://avatarko.ru/img/avatar/31/muzhchina_shlyapa_galstuk_30949.jpg\",\r\n\t\t},\r\n\t\t{\r\n\t\t\tid: 3,\r\n\t\t\tname: \"Александра\",\r\n\t\t\tavatar: \"https://avatarko.ru/img/avatar/1/Batman_siluet.jpg\",\r\n\t\t},\r\n\t\t{\r\n\t\t\tid: 4,\r\n\t\t\tname: \"Евгений\",\r\n\t\t\tavatar:\r\n\t\t\t\t\"https://avatarko.ru/img/avatar/4/siluet_volk_luna_3945.jpg\",\r\n\t\t},\r\n\t\t{\r\n\t\t\tid: 5,\r\n\t\t\tname: \"Дмитрий\",\r\n\t\t\tavatar:\r\n\t\t\t\t\"https://shopsticker.ru/image/cache/catalog/image/rock/1-800x800.png\",\r\n\t\t},\r\n\t\t{\r\n\t\t\tid: 6,\r\n\t\t\tname: \"Мария\",\r\n\t\t\tavatar:\r\n\t\t\t\t\"https://avatarko.ru/img/avatar/3/devushka_brunetka_2748.jpg\",\r\n\t\t},\r\n\t],\r\n\tmessages: [\r\n\t\t{ id: 1, message: \"hi\" },\r\n\t\t{ id: 2, message: \"Привет\" },\r\n\t\t{ id: 3, message: \"helo\" },\r\n\t\t{ id: 4, message: \"bonjorno\" },\r\n\t\t{ id: 5, message: \"arigato\" },\r\n\t]\r\n};\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n\r\n\tswitch (action.type) {\r\n\t\tcase SEND_MESSAGE:\r\n\t\t\tlet body = action.newMessageBody;\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tmessages: [...state.messages, { id: 6, message: body }],\r\n\t\t\t};\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n\t\r\n};\r\n\r\nexport const sendMessageCreator = (newMessageBody) => {\r\n\treturn {\r\n\t\ttype: SEND_MESSAGE,\r\n\t\tnewMessageBody\r\n\t};\r\n};\r\n\r\nexport default dialogsReducer;\r\n","let initialState = [\r\n   {\r\n      id: 1,\r\n      firstName: \"Михаил\",\r\n      lastName: \"Горбачев\",\r\n      img:\r\n         \"https://i.mycdn.me/i?r=AyH4iRPQ2q0otWIFepML2LxRtD8Rt4dOcNotQVv1NRj-6w\",\r\n   },\r\n   {\r\n      id: 2,\r\n      firstName: \"Мария\",\r\n      lastName: \"Семенова\",\r\n      img:\r\n         \"https://i.mycdn.me/i?r=AyH4iRPQ2q0otWIFepML2LxRWlSGblX1_1QRBvnp85UJSw\",\r\n   },\r\n   {\r\n      id: 3,\r\n      firstName: \"Дмитрий\",\r\n      lastName: \"Дятлов\",\r\n      img:\r\n         \"https://i.mycdn.me/i?r=AyH4iRPQ2q0otWIFepML2LxR8uOdKS9gpiAPnGAGovPPmw\",\r\n   },\r\n]\r\n\r\nconst friendsReducer = (state = initialState, action) => {\r\n   return state;\r\n}\r\n\r\nexport default friendsReducer;","import axios from \"axios\";\r\n\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: \"https://social-network.samuraijs.com/api/1.0/\",\r\n    headers: {\r\n        \"API-KEY\": \"88e1c3b3-282d-4129-923b-17f784504903\"\r\n    }\r\n})\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage, pageSize) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => response.data)\r\n    },\r\n\r\n    follow(userId) {\r\n        return instance.post(`follow/${userId}`)\r\n    },\r\n\r\n    unfollow(userId) {\r\n        return instance.delete(`follow/${userId}`)\r\n    },\r\n    getProfile(userId) {\r\n        console.warn(\"Obslolete method. Please profileAPI object\")\r\n        return profileAPI.getProfile(userId)\r\n    }\r\n}\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId) {\r\n        return instance.get(`profile/${userId}`);\r\n    },\r\n    getStatus(userId) {\r\n        return instance.get(`profile/status/${userId}`);\r\n    },\r\n    updateStatus(status) {\r\n        return instance.put(`profile/status`, { status: status });\r\n    }\r\n}\r\n\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.get(`auth/me`);\r\n    },\r\n    login(email, password, rememberMe = false) {\r\n        return instance.post(`auth/login`, { email, password, rememberMe });\r\n    },\r\n    logout() {\r\n        return instance.delete(`auth/login`);\r\n    }\r\n}","import { usersAPI, profileAPI } from \"../api/api\";\r\n\r\nconst ADD_POST = \"ADD-POST\";\r\nconst SET_USER_PROFILE = \"SET_USER_PROFILE\";\r\nconst SET_STATUS = \"SET_STATUS\";\r\n\r\nlet initialState = {\r\n\tposts: [\r\n\t\t{ id: 1, message: \"Hi, how are you?\", likesCount: \"9\" },\r\n\t\t{ id: 2, message: \"It's my first post\", likesCount: \"15\" },\r\n\t],\r\n\tprofile: null,\r\n\tstatus: \"\"\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase ADD_POST: {\r\n\t\t\tlet newPost = {\r\n\t\t\t\tid: 5,\r\n\t\t\t\tmessage: action.newPostText,\r\n\t\t\t\tlikesCount: 0,\r\n\t\t\t};\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tposts: [...state.posts, newPost],\r\n\t\t\t\tnewPostText: \"\"\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase SET_STATUS: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tstatus: action.status\r\n\t\t\t}\r\n\t\t}\r\n\t\tcase SET_USER_PROFILE: {\r\n\t\t\treturn { ...state, profile: action.profile }\r\n\t\t}\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\nexport const addPostActionCreator = (newPostText) => ({ type: ADD_POST, newPostText });\r\n\r\nexport const setUserProfile = (profile) => ({ type: SET_USER_PROFILE, profile });\r\n\r\nexport const setStatus = (status) => ({ type: SET_STATUS, status });\r\n\r\nexport const getUserProfile = (userId) => (dispatch) => {\r\n\tusersAPI.getProfile(userId)\r\n\t\t.then(response => { dispatch(setUserProfile(response.data)) })\r\n};\r\n\r\nexport const getStatus = (userId) => (dispatch) => {\r\n\tprofileAPI.getStatus(userId)\r\n\t\t.then(response => {\r\n\t\t\tdispatch(setStatus(response.data))\r\n\t\t})\r\n};\r\n\r\nexport const updateStatus = (status) => (dispatch) => {\r\n\tprofileAPI.updateStatus(status)\r\n\t\t.then(response => {\r\n\t\t\tif(response.data.resultCode === 0)\r\n\t\t\tdispatch(setStatus(status))\r\n\t\t})\r\n};\r\n\r\nexport default profileReducer;\r\n","import { usersAPI } from \"../api/api\";\r\n\r\nconst FOLLOW = \"FOLLOW\";\r\nconst UNFOLLOW = \"UNFOLLOW\";\r\nconst SET_USERS = \"SET_USERS\";\r\nconst SET_CURRENT_PAGE = \"SET_CURRENT_PAGE\";\r\nconst SET_TOTAL_USERS_COUNT = \"SET_TOTAL_USERS_COUNT\";\r\nconst TOGGLE_IS_FETCING = \"TOGGLE_IS_FETCING\";\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = \"TOGGLE_IS_FOLLOWING_PROGRESS\";\r\n\r\n\r\nconst initialState = {\r\n\tusers: [],\r\n\tpageSize: 100,\r\n\ttotalUsersCount: 0,\r\n\tcurrentPage: 1,\r\n\tisFetching: false,\r\n\tfollowingProgress: []\r\n};\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase FOLLOW:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tusers: state.users.map(user => {\r\n\t\t\t\t\tif (user.id === action.userId) {\r\n\t\t\t\t\t\treturn { ...user, followed: true }\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn user\r\n\t\t\t\t})\r\n\t\t\t};\r\n\t\tcase UNFOLLOW:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tusers: state.users.map(user => {\r\n\t\t\t\t\tif (user.id === action.userId) {\r\n\t\t\t\t\t\treturn { ...user, followed: false }\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn user\r\n\t\t\t\t})\r\n\t\t\t};\r\n\t\tcase SET_USERS: {\r\n\t\t\treturn { ...state, users: [...action.users] }\r\n\t\t}\r\n\t\tcase SET_CURRENT_PAGE: {\r\n\t\t\treturn { ...state, currentPage: action.currentPage }\r\n\t\t}\r\n\t\tcase SET_TOTAL_USERS_COUNT: {\r\n\t\t\treturn { ...state, totalUsersCount: action.count }\r\n\t\t}\r\n\t\tcase TOGGLE_IS_FETCING: {\r\n\t\t\treturn { ...state, isFetching: action.isFetching }\r\n\t\t}\r\n\t\tcase TOGGLE_IS_FOLLOWING_PROGRESS: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tfollowingProgress: action.isFetching\r\n\t\t\t\t\t? [...state.followingProgress, action.userId]\r\n\t\t\t\t\t: state.followingProgress.filter(id => id !== action.userId)\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\nexport const followSuccess = (userId) => {\r\n\treturn { type: FOLLOW, userId };\r\n};\r\nexport const unfollowSuccess = (userId) => {\r\n\treturn { type: UNFOLLOW, userId };\r\n};\r\nexport const setUsers = (users) => {\r\n\treturn { type: SET_USERS, users };\r\n};\r\nexport const setCurrentPage = (currentPage) => {\r\n\treturn { type: SET_CURRENT_PAGE, currentPage };\r\n};\r\nexport const setTotalUsersCount = (totalUsersCount) => {\r\n\treturn { type: SET_TOTAL_USERS_COUNT, count: totalUsersCount };\r\n};\r\nexport const toggleIsFetching = (isFetching) => {\r\n\treturn { type: TOGGLE_IS_FETCING, isFetching };\r\n};\r\nexport const toggleFollowingProgress = (isFetching, userId) => {\r\n\treturn { type: TOGGLE_IS_FOLLOWING_PROGRESS, isFetching, userId };\r\n};\r\n\r\nexport const getUsers = (page, pageSize) => {\r\n\treturn (dispatch) => {\r\n\t\tdispatch(toggleIsFetching(true))\r\n\t\tdispatch(setCurrentPage(page))\r\n\r\n\t\tusersAPI.getUsers(page, pageSize).then(data => {\r\n\r\n\t\t\tdispatch(toggleIsFetching(false))\r\n\t\t\tdispatch(setUsers(data.items))\r\n\t\t\tdispatch(setTotalUsersCount(data.totalCount))\r\n\t\t})\r\n\t}\r\n}\r\n\r\nexport const follow = (userId) => {\r\n\treturn (dispatch) => {\r\n\t\tdispatch(toggleFollowingProgress(true, userId));\r\n\r\n\t\tusersAPI.follow(userId)\r\n\t\t\t.then(response => {\r\n\t\t\t\tif (response.data.resultCode === 0) {\r\n\t\t\t\t\tdispatch(followSuccess(userId));\r\n\t\t\t\t}\r\n\t\t\t\tdispatch(toggleFollowingProgress(false, userId))\r\n\t\t\t})\r\n\t}\r\n}\r\n\r\nexport const unfollow = (userId) => {\r\n\treturn (dispatch) => {\r\n\t\tdispatch(toggleFollowingProgress(true, userId));\r\n\r\n\t\tusersAPI.unfollow(userId)\r\n\t\t\t.then(response => {\r\n\t\t\t\tif (response.data.resultCode === 0) {\r\n\t\t\t\t\tdispatch(unfollowSuccess(userId));\r\n\t\t\t\t}\r\n\t\t\t\tdispatch(toggleFollowingProgress(false, userId))\r\n\t\t\t})\r\n\t}\r\n}\r\n\r\nexport default usersReducer;\r\n\r\n// Reducer - это функция через которую происходит модификация state\r\n","import { authAPI } from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\"\r\n\r\nconst SET_USER_DATA = \"SET_USER_DATA\";\r\n\r\nconst initialState = {\r\n\tuserId: null,\r\n\temail: null,\r\n\tlogin: null,\r\n\tisAuth: false,\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase SET_USER_DATA:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\t...action.payload,\r\n\t\t\t};\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\nexport const setAuthUserData = (userId, email, login, isAuth) => {\r\n\treturn { type: SET_USER_DATA, payload: { userId, email, login, isAuth } };\r\n};\r\n\r\nexport const getAuthUserData = () => (dispatch) => {\r\n\tauthAPI.me().then((response) => {\r\n\t\tif (response.data.resultCode === 0) {\r\n\t\t\tlet { id, email, login } = response.data.data;\r\n\t\t\tdispatch(setAuthUserData(id, email, login, true));\r\n\t\t}\r\n\t});\r\n};\r\n\r\nexport const login = (email, password, rememberMe) => (dispatch) => {\r\n\t\r\n\tauthAPI.login(email, password, rememberMe).then((response) => {\r\n\t\tif (response.data.resultCode === 0) {\r\n\t\t\tdispatch(getAuthUserData());\r\n\t\t} else {\r\n\t\t\tlet  message = response.data.messages.length > 0 ? response.data.messages[0] : \"Some error\"\r\n\t\t\tdispatch(stopSubmit(\"login\", {_error: message}))\r\n\t\t}\r\n\t});\r\n};\r\n\r\nexport const logout = () => (dispatch) => {\r\n\tauthAPI.logout().then((response) => {\r\n\t\tif (response.data.resultCode === 0) {\r\n\t\t\tdispatch(getAuthUserData(null, null, null, false));\r\n\t\t}\r\n\t});\r\n};\r\n\r\nexport default authReducer;\r\n\r\n// Reducer - это функция через которую происходит модификация state\r\n","import { applyMiddleware, combineReducers, createStore } from \"redux\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport friendsReducer from \"./friends-reducer\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddleWare from \"redux-thunk\";\r\nimport {reducer as formReducer } from \"redux-form\";\r\n\r\nlet reducers = combineReducers({\r\n\tprofilePage: profileReducer,\r\n\tdialogsPage: dialogsReducer  ,\r\n\tfriends: friendsReducer,\r\n\tusersPage: usersReducer,\r\n\tauth: authReducer,\r\n\tform: formReducer\r\n});\r\n\r\nlet store = createStore(reducers, applyMiddleware(thunkMiddleWare));\r\n\r\nexport default store;","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport classes from \"./Header.module.css\"\r\n\r\n\r\nconst Header = (props) => {\r\n\treturn (\r\n\t\t<header className={classes.header}>\r\n\t\t\t<img src={props.img} alt=\"logo\" />\r\n\r\n\t\t\t<div className={classes.loginBlock}>\r\n\t\t\t\t{props.isAuth \r\n\t\t\t\t? <div>{props.login} - <button onClick={props.logout}>Logout</button></div>\r\n\t\t\t\t: <NavLink to={`/login`}>Login</NavLink>}\r\n\t\t\t</div>\r\n\t\t</header>\r\n\t);\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport Header from \"./Header\";\r\nimport { connect } from \"react-redux\";\r\nimport {getAuthUserData, logout} from \"../../redux/auth-reducer\";\r\n\r\n\r\n\r\nclass HeaderConstainer extends React.Component {\r\n\r\n\tcomponentDidMount() {\r\n       this.props.getAuthUserData()\r\n\t} \r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<Header {...this.props}/>\r\n\t\t);\r\n\t}\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn(\r\n\t\t{\r\n\t\t\tisAuth: state.auth.isAuth,\r\n\t\t\tlogin: state.auth.login\r\n\t\t}\r\n\t)\r\n}\r\n\r\nexport default connect(mapStateToProps, {getAuthUserData, logout})(HeaderConstainer);\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport classes from \"./Navbar.module.css\";\r\n// import Friends from \"../Friends/Friends\";\r\n\r\n\r\nconst Navbar = (props) => {\r\n\t\r\n\treturn (\r\n\t\t<nav className={classes.nav}>\r\n\t\t\t<ul>\r\n\t\t\t\t<li className={classes.item}><NavLink to=\"/profile\" activeClassName={classes.active}>Profile</NavLink></li>\r\n\t\t\t\t<li className={classes.item}><NavLink to=\"/dialogs\" activeClassName={classes.active}>Message</NavLink></li>\r\n\t\t\t\t<li className={classes.item}><NavLink to=\"/users\">Users</NavLink></li>\r\n\t\t\t\t<li className={classes.item}>Main content</li>\r\n\t\t\t\t<li className={classes.item}>News</li>\r\n\t\t\t\t<li className={classes.item}>Music</li>\r\n\t\t\t\t<li className={classes.item}>Settings</li>\r\n\t\t\t</ul>\r\n\t\t\t{/* <Friends friends={props.friends}/> */}\r\n\t\t</nav>\r\n\t);\r\n};\r\n\r\nexport default Navbar;","import React from \"react\";\r\nimport classes from \"./Post.module.css\";\r\n\r\nconst Post = (props) => {\r\n\r\n\treturn (\r\n\t\t<div className={classes.item}>\r\n\t\t\t<img\r\n\t\t\t\tsrc=\"https://www.paulseward.com/downloads/Avatars/cartoon_avatar.png\"\r\n\t\t\t\talt=\"avatar\"\r\n\t\t\t/>\r\n\t\t\t{props.message}\r\n\t\t\t<div>\r\n\t\t\t\t<span>{`Like ${props.likesCount}`}</span>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Post;","import classes from './FormsControls.module.css'\r\nimport React from 'react'\r\n\r\n\r\nexport const TextArea = ({ input, meta, ...props }) => {\r\n\r\n    const hasError = meta.touched && meta.error;\r\n\r\n    return (\r\n        <div className={classes.formControl + \" \" + (hasError ? classes.error : \"\")}>\r\n            <div>\r\n                <textarea {...input} {...props} />\r\n            </div>\r\n            {hasError && <span>{meta.error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Input = ({ input, meta, ...props }) => {\r\n\r\n    const hasError = meta.touched && meta.error;\r\n\r\n    return (\r\n        <div className={classes.formControl + \" \" + (hasError ? classes.error : \"\")}>\r\n            <div>\r\n                <input {...input} {...props} />\r\n            </div>\r\n            {hasError && <span>{meta.error}</span>}\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport classes from \"./MyPosts.module.css\";\r\nimport Post from \"./Post/Post\";\r\nimport { required, maxLengthCreator } from \"../../../utils/validators/validators\"\r\nimport { TextArea } from \"../../common/FormsControls/FormsControls\";\r\n\r\n\r\nconst MyPosts = (props) => {\r\n\r\n\tconst postElements = props.posts.map((post) => (\r\n\t\t<Post message={post.message} likesCount={post.likesCount} key={post.id} />\r\n\t));\r\n\r\n\tconst onAddPost = (values) => {\r\n\t\tprops.addPost(values.newPostText)\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className={classes.myPosts}>\r\n\t\t\t<h3>Мои посты</h3>\r\n\t\t\t<AddNewPostFormRedux onSubmit={onAddPost} />\r\n\t\t\t<div className={classes.posts}>{postElements}</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nconst maxLength10 = maxLengthCreator(10)\r\n\r\nconst AddNewPostForm = (props) => {\r\n\treturn (\r\n\t\t<form onSubmit={props.handleSubmit}>\r\n\t\t\t<Field name=\"newPostText\" placeholder={\"Укажите текст поста\"} component={TextArea} validate={[required, maxLength10]} />\r\n\t\t\t<button>Добавить пост</button>\r\n\t\t</form>\r\n\t)\r\n}\r\n\r\nconst AddNewPostFormRedux = reduxForm({ form: \"profileAddNewPostForm\" })(AddNewPostForm)\r\n\r\nexport default MyPosts;\r\n","import { connect } from \"react-redux\";\r\nimport { addPostActionCreator } from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tposts: state.profilePage.posts,\r\n\t\tnewPostText: state.profilePage.newPostText\r\n\t}\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n\treturn {\r\n\t\taddPost: (newPostText) => {\r\n\t\t\tdispatch(addPostActionCreator(newPostText))\r\n\t\t}\r\n\t}\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\r\n\r\nexport default MyPostsContainer;","import React from 'react'\r\nimport preloader from \"../../../assets/images/loading.svg\";\r\n\r\nconst Preloader = () => {\r\n    return (\r\n        <div>\r\n            <img src={preloader} alt=\"preloader\" />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Preloader\r\n","import React from 'react'\r\n\r\nclass ProfileStatus extends React.Component {\r\n\r\n    state = {\r\n        editMode: false,\r\n        status: this.props.status\r\n    }\r\n\r\n    activatEditMode = () => {\r\n        console.log(\"this:\", this)\r\n        this.setState({\r\n            editMode: true\r\n        })\r\n    }\r\n    deactivatEditMode = () => {\r\n        this.setState({\r\n            editMode: false\r\n        });\r\n        this.props.updateStatus(this.state.status);\r\n    }\r\n\r\n    onStatusChange = (e) => {\r\n        this.setState({\r\n            status: e.currentTarget.value\r\n        })\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if(prevProps.status !== this.props.status) {\r\n            this.setState({\r\n                status: this.props.status\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n\r\n            <div>\r\n                {!this.state.editMode &&\r\n                    <div>\r\n                        <span onDoubleClick={this.activatEditMode}>{this.props.status || \"Укажите статус\"}</span> \r\n                    </div>\r\n                }\r\n                {this.state.editMode &&\r\n                    <div>\r\n                        <input onChange={this.onStatusChange} autoFocus={true} type=\"text\" value={this.state.status}  onBlur={this.deactivatEditMode} />\r\n                    </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ProfileStatus","import React from \"react\";\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport classes from \"./ProfileInfo.module.css\";\r\nimport ProfileStatus from \"./ProfileStatus\";\r\n\r\nconst ProfileInfo = (props) => {\r\n\t\tconsole.log(props)\r\n\tif(!props.profile) {\r\n\t\treturn(\r\n\t\t\t<Preloader />\r\n\t\t)\r\n\t}\r\n\t\r\n\treturn (\r\n\t\t<div className={classes.profileInfo}>\r\n\t\t\t{/* <figure>\r\n\t\t\t\t<img\r\n\t\t\t\t\tsrc=\"https://wowslider.net/local-sliders/demo-10/data1/images/road220058.jpg\"\r\n\t\t\t\t\talt={`qweqwe`}\r\n\t\t\t\t/>\r\n\t\t\t</figure> */}\r\n\t\t\t<div className={classes.info}>\r\n\t\t\t\t<img src={props.profile.photos.large} alt=\"wefrr\"/>\r\n\t\t\t\t<p><span style={{fontWeight: \"600\"}}>Статус: </span>{props.profile.aboutMe}</p>\r\n\t\t\t\t<p><span style={{fontWeight: \"600\"}}>ФИО: </span>{props.profile.fullName}</p>\r\n\t\t\t\t<p><span style={{fontWeight: \"600\"}}>Работа: </span>{props.profile.fullName}</p>\r\n\t\t\t\t<p><span style={{fontWeight: \"600\"}}>Статус: </span>{<ProfileStatus status={props.status} updateStatus={props.updateStatus} />}</p>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default ProfileInfo;\r\n","import React from \"react\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\n\r\nconst Profile = (props) => {\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus} />\r\n\t\t\t<MyPostsContainer />\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Profile;","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nconst withAuthRedirect = (Component) => {\r\n    \r\n    return class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to=\"/login\" />\r\n\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n}\r\n\r\nexport default withAuthRedirect\r\n","import React, { Component } from 'react'\r\nimport Profile from './Profile'\r\nimport { getUserProfile, getStatus, updateStatus } from \"../../redux/profile-reducer\";\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport withAuthRedirect from \"../../hoc/withAuthRedirect\"\r\n\r\n\r\nexport class ProfileContainer extends Component {\r\n\r\n\tcomponentDidMount() {\r\n\t\tlet userId = this.props.match.params.userId\r\n\t\tif (!userId) userId = this.props.authorizedUserId;\r\n\t\tthis.props.getUserProfile(userId)\r\n\t\tthis.props.getStatus(userId)\r\n\t}\r\n\r\n\trender() {\r\n\t\t\r\n\t\treturn (\r\n\t\t\t<Profile {...this.props}\r\n\t\t\tprofile={this.props.profile}\r\n\t\t\t\t\t\tstatus={this.props.status}\r\n\t\t\t\t\t\tupdateStatus={this.props.updateStatus} />\r\n\t\t)\r\n\t}\r\n}\r\n\r\nlet AuthRedirectComponent = withAuthRedirect(ProfileContainer)\r\n\r\nconst mapStateToProps = (state) => {\r\n\t\r\n\treturn {\r\n\t\tprofile: state.profilePage.profile,\r\n\t\tisAuth: state.auth.isAuth,\r\n\t\tstatus: state.profilePage.status,\r\n\t\tauthorizedUserId: state.auth.userId,\r\n\t\t// isAuth: state.auth.isAuth\r\n\t}\r\n}\r\n\r\nconst WithUrlDataContainerComponent = withRouter(AuthRedirectComponent)\r\n\r\nexport default connect(mapStateToProps, { getUserProfile, getStatus, updateStatus })(WithUrlDataContainerComponent)","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport classes from \"./DialogsItem.module.css\";\r\n\r\nconst DialogsItem = (props) => {\r\n\r\n\treturn (\r\n\t\t<div className={classes.users}>\r\n\t\t\t<NavLink to={`/dialogs/${props.id}`} activeClassName={classes.active}>\r\n\t\t\t\t<figure>\r\n\t\t\t\t\t<img src={props.avatar} alt={`${props.name} ${props.id}`}/>\r\n\t\t\t\t</figure>\r\n\t\t\t\t{props.name}\r\n\t\t\t</NavLink>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default DialogsItem;\r\n","import React from \"react\";\r\nimport classes from \"./Message.module.css\";\r\n\r\n\r\nconst Message = (props) => {\r\n\r\n\treturn (\r\n\t\t<div className={classes.message}>{props.message}</div>\r\n\t);\r\n};\r\n\r\nexport default Message;\r\n","import React from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport classes from \"./Dialogs.module.css\";\r\nimport DialogsItem from \"./DialogsItem/DialogsItem\";\r\nimport Message from \"./Message/Message\";\r\n\r\nconst Dialogs = (props) => {\r\n\r\n\tlet state = props.dialogsPage;\r\n\r\n\tlet dialogsElements = state.dialogs.map((d) => (\r\n\t\t<DialogsItem name={d.name} id={d.id} avatar={d.avatar} key={d.id} />\r\n\t));\r\n\tlet messageElements = state.messages.map((m) => (\r\n\t\t<Message message={m.message} key={m.id} />\r\n\t));\r\n\r\n\tlet addNewMessage = (values) => {\r\n\t\tprops.sandMessage(values.newMessageBody)\r\n\t}\r\n\t\r\n\tif (!props.isAuth) {\r\n\t\treturn <Redirect to=\"/login\" />\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className={classes.dialogs}>\r\n\t\t\t<div className={classes.dialogsItem}>{dialogsElements}</div>\r\n\t\t\t<div className=\"messages\">\r\n\t\t\t\t<div>{messageElements}</div>\r\n\t\t\t\t<AddMessageFormRedux onSubmit={addNewMessage} />\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\n\r\nconst addMessageForm = (props) => {\r\n\treturn (\r\n\t\t<form onSubmit={props.handleSubmit}>\r\n\t\t\t<Field component=\"textarea\" name=\"newMessageBody\" placeholder=\"Введите текст сообщения\" />\r\n\t\t\t<div><button>Отправить сообщение</button></div>\r\n\t\t</form>\r\n\t)\r\n}\r\n\r\nconst AddMessageFormRedux = reduxForm({form: \"dialogAddMessageForm\"})(addMessageForm)\r\n\r\nexport default Dialogs;","import { connect } from \"react-redux\";\r\nimport { sendMessageCreator } from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport withAuthRedirect from \"../../hoc/withAuthRedirect\"\r\n\r\nlet mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tdialogsPage: state.dialogsPage,\r\n\t\tisAuth: state.auth.isAuth\r\n\t};\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n\treturn {\r\n\t\tsandMessage: (newMessageBody) => {\r\n\t\t\tdispatch(sendMessageCreator(newMessageBody));\r\n\t\t}\r\n\t};\r\n};\r\n\r\nlet AuthRedirectComponent = withAuthRedirect(Dialogs)\r\n\r\nconst DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(AuthRedirectComponent);\r\n\r\nexport default DialogsContainer;\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport userPhoto from \"../../assets/images/user.jpg\"\r\nimport classes from \"./Users.module.css\";\r\n\r\nconst Users = (props) => {\r\n    let pagesCount = Math.ceil(props.totalUsersCount / props.pageSize);\r\n    // let pagesCount = Math.ceil(50 / props.pageSize);\r\n\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {pages.map(page => {\r\n                return (\r\n                    <span className={props.currentPage === page && classes.selectedPage} onClick={() => { props.onPageChanged(page) }}>{page}</span>\r\n                )\r\n            })}\r\n            {\r\n                props.users.map(\r\n                    (user) => {\r\n                        return (\r\n                            <div key={user.id}>\r\n                                <span>\r\n                                    <div>\r\n                                        <NavLink to={`/profile/${user.id}`}>\r\n                                            <img\r\n                                                src={user.photos.small != null ? user.photos.small : userPhoto}\r\n                                                className={classes.photo}\r\n                                                alt={user.id}\r\n                                            />\r\n                                        </NavLink>\r\n                                    </div>\r\n                                    <div>\r\n                                        {\r\n                                            user.followed\r\n                                                ? (<button disabled={props.followingProgress.some(id => id === user.id)}\r\n                                                    onClick={() => {\r\n                                                        props.unfollow(user.id)\r\n                                                    }}>unfollow</button>)\r\n\r\n                                                : (<button disabled={props.followingProgress.some(id => id === user.id)}\r\n                                                    onClick={() => {\r\n                                                        props.follow(user.id)\r\n\r\n                                                    }}>Follow</button>)\r\n                                        }\r\n                                    </div>\r\n                                </span>\r\n                                <span>\r\n                                    <span>\r\n                                        <div>{user.name}</div>\r\n                                        <div>{user.status}</div>\r\n                                    </span>\r\n                                    <span>\r\n                                        <div>{\"user.location.country\"}</div>\r\n                                        <div>{\"user.location.city\"}</div>\r\n                                    </span>\r\n                                </span>\r\n                            </div>\r\n                        )\r\n                    }\r\n                )\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Users;\r\n","// import {createSelector} from \"reselect\"\r\n\r\nexport const getUsersSelector = (state) => {\r\n   return state.usersPage.users\r\n}\r\n\r\nexport const getPageSizeSelector = (state) => {\r\n   return state.usersPage.pageSize\r\n}\r\n\r\nexport const getTotalUsersCountSelector = (state) => {\r\n   return state.usersPage.totalUsersCount\r\n}\r\n\r\nexport const getCurrentPageSelector = (state) => {\r\n   return state.usersPage.currentPage\r\n}\r\n\r\nexport const getIsFetchingSelector = (state) => {\r\n   return state.usersPage.isFetching\r\n}\r\n\r\nexport const getFollowingProgressSelector = (state) => {\r\n   return state.usersPage.followingProgress\r\n}","import React from 'react';\r\nimport Users from \"./Users\";\r\nimport { connect } from 'react-redux';\r\nimport { follow, unfollow, setCurrentPage, setTotalUsersCount, toggleFollowingProgress, getUsers } from \"../../redux/users-reducer\";\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\nimport { getUsersSelector, getPageSizeSelector, getTotalUsersCountSelector, getCurrentPageSelector, getIsFetchingSelector, getFollowingProgressSelector } from '../../redux/users-selectors';\r\n\r\nclass UsersContainer extends React.Component {\r\n\r\n\r\n    componentDidMount() {\r\n        this.props.getUsers(this.props.currentPage, this.props.pageSize)\r\n    }\r\n\r\n    onPageChanged = (pageNumber) => {\r\n        this.props.getUsers(pageNumber, this.props.pageSize)\r\n    }\r\n\r\n    render() {\r\n        console.log(\"Render Users\")\r\n        return <>\r\n            {this.props.isFetching ? <Preloader /> : null}\r\n            <Users\r\n                totalUsersCount={this.props.totalUsersCount}\r\n                pageSize={this.props.pageSize}\r\n                currentPage={this.props.currentPage}\r\n                onPageChanged={this.onPageChanged}\r\n                users={this.props.users}\r\n                follow={this.props.follow}\r\n                unfollow={this.props.unfollow}\r\n                followingProgress={this.props.followingProgress}\r\n            />\r\n        </>\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    console.log(\"MapStateToProps Users\")\r\n    return {\r\n        // Селекторы - функция которая принимает state и возвращает значение\r\n        users: getUsersSelector(state),\r\n        pageSize: getPageSizeSelector(state),\r\n        totalUsersCount: getTotalUsersCountSelector(state),\r\n        currentPage: getCurrentPageSelector(state),\r\n        isFetching: getIsFetchingSelector(state),\r\n        followingProgress: getFollowingProgressSelector(state)\r\n    }\r\n}\r\n\r\n// const mapStateToProps = (state) => {\r\n//     return {\r\n//         users: state.usersPage.users,\r\n//         pageSize: state.usersPage.pageSize,\r\n//         totalUsersCount: state.usersPage.totalUsersCount,\r\n//         currentPage: state.usersPage.currentPage,\r\n//         isFetching: state.usersPage.isFetching,\r\n//         followingProgress: state.usersPage.followingProgress\r\n//     }\r\n// }\r\n\r\n// const mapDispatchToProps = (dispatch) => {\r\n//     return {\r\n//         follow: (userId) => {\r\n//             dispatch(followAC(userId))\r\n//         },\r\n//         unfollow: (userId) => {\r\n//             dispatch(unfollowAC(userId))\r\n//         },\r\n//         setUsers: (users) => {\r\n//             dispatch(setUsersAC(users))\r\n//         },\r\n//         setCurrentPage: (pageNumber) => {\r\n//             dispatch(setCurrentPageAC(pageNumber))\r\n//         },\r\n//         setTotalUsersCount: (totalCount) => {\r\n//             dispatch(setUsersTotalCountAC(totalCount))\r\n//         },\r\n//         toggleIsFetching: (isFetching) => {\r\n//             dispatch(toggleIsFetchingAC(isFetching))\r\n//         }\r\n//     }\r\n// }\r\n\r\n\r\nconst dispatch = { follow, unfollow, setCurrentPage, setTotalUsersCount, toggleFollowingProgress, getUsers}\r\n\r\n\r\nexport default connect(mapStateToProps, dispatch)(UsersContainer)\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { required } from '../../utils/validators/validators';\r\nimport { Input } from '../common/FormsControls/FormsControls';\r\nimport {login} from \"../../redux/auth-reducer\"\r\nimport { Redirect } from 'react-router-dom';\r\nimport classes from \"../../components/common/FormsControls/FormsControls.module.css\";\r\n\r\nconst LoginForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div><Field placeholder={\"Email\"} name={\"email\"} component={Input} validate={[required]} /></div>\r\n            <div><Field placeholder={\"Password\"} type=\"password\" name={\"password\"} component={Input} validate={[required]} /></div>\r\n            <div><Field type=\"checkbox\" name={\"rememberMe\"} component={Input} />Запомить</div>\r\n            {props.error && <div className={classes.formSummaryError}>{props.error}</div>}\r\n            <div><button>Войти</button></div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({ form: \"login\" })(LoginForm)\r\n\r\nconst Login = (props) => {\r\n    \r\n    const onSubmit = (formData) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe)\r\n    }\r\n\r\n    if(props.isAuth) {\r\n        return <Redirect to=\"profile\" />\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>Login</h1>\r\n            <LoginReduxForm onSubmit={onSubmit} />\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return(\r\n        {\r\n            isAuth: state.auth.isAuth\r\n        }\r\n    )\r\n}\r\n\r\nexport default  connect(mapStateToProps, {login})(Login);\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport HeaderConstainer from \"./components/Header/HeaderContainer\";\r\nimport Navbar from \"./components/Navbar/Navbar\";\r\nimport ProfileContainer from \"./components/Profile/ProfileContainer\";\r\nimport DialogsContainer from \"./components/Dialogs/DialogsContainer\";\r\nimport { BrowserRouter, Route } from \"react-router-dom\";\r\nimport UsersContainer from \"./components/Users/UsersContainer\";\r\nimport Login from \"./components/Login/Login\";\r\n\r\nconst App = (props) => {\r\n\treturn (\r\n\t\t<BrowserRouter>\r\n\t\t\t<div className=\"app-wrapper\">\r\n\t\t\t\t<HeaderConstainer img=\"https://bower.io/img/bower-logo.png\" />\r\n\t\t\t\t<Navbar friends={props.state} />\r\n\t\t\t\t<div className=\"app-wrapper-content\">\r\n\t\t\t\t\t<Route\r\n\t\t\t\t\t\tpath=\"/profile/:userId?\"\r\n\t\t\t\t\t\trender={() => <ProfileContainer store={props.store} />}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Route\r\n\t\t\t\t\t\tpath=\"/dialogs\"\r\n\t\t\t\t\t\trender={() => <DialogsContainer store={props.store} />}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Route path=\"/users\" render={() => <UsersContainer />} />\r\n\t\t\t\t\t<Route path=\"/login\" render={() => <Login />} />\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</BrowserRouter>\r\n\t);\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import \"./index.css\";\r\nimport store from \"./redux/redux-store\";\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { Provider } from \"react-redux\";\r\n\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n\t\t<Provider store={store}>\r\n\t\t\t<App\r\n\t\t\t\tstore={store}\r\n\t\t\t/>\r\n\t\t</Provider>\r\n\t</React.StrictMode>,\r\n\tdocument.getElementById(\"root\")\r\n);\r\n\r\nserviceWorker.unregister();","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__kLS1n\",\"error\":\"FormsControls_error__iW0RU\",\"formSummaryError\":\"FormsControls_formSummaryError__17uhX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3GLLw\",\"loginBlock\":\"Header_loginBlock__VWf3k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"myPosts\":\"MyPosts_myPosts__13Pyj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileInfo\":\"ProfileInfo_profileInfo__2mdIo\",\"info\":\"ProfileInfo_info__2Vkc-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__3G4CN\",\"dialogsItems\":\"Dialogs_dialogsItems__3gQMX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"users\":\"DialogsItem_users__BOCqR\",\"active\":\"DialogsItem_active__JtMEZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"photo\":\"Users_photo__1MeoF\",\"selectedPage\":\"Users_selectedPage__3UP5Q\",\"preloader\":\"Users_preloader__3VoRD\"};"],"sourceRoot":""}