{"version":3,"sources":["components/Navbar/Navbar.module.css","components/Dialogs/Dialogs.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Dialogs/DialogItem/DialogItem.module.css","components/Header/Header.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Dialogs/Message/Message.module.css","components/Header/Header.jsx","components/Navbar/Navbar.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","App.jsx","serviceWorker.js","index.js"],"names":["module","exports","Header","props","className","classes","header","src","img","alt","Navbar","nav","item","to","activeClassName","active","Post","message","likesCount","MyPosts","postElements","id","map","post","key","myPosts","style","marginBottom","placeholder","posts","ProfileInfo","profileInfo","Profile","DialogItem","dialog","name","Message","Dialogs","dialogElements","messageElements","maessage","dialogs","dialogsItems","messages","App","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console"],"mappings":"yGACAA,EAAOC,QAAU,CAAC,IAAM,oBAAoB,KAAO,qBAAqB,OAAS,yB,mBCAjFD,EAAOC,QAAU,CAAC,QAAU,2B,mBCA5BD,EAAOC,QAAU,CAAC,QAAU,2B,gBCA5BD,EAAOC,QAAU,CAAC,OAAS,2BAA2B,OAAS,6B,mBCA/DD,EAAOC,QAAU,CAAC,OAAS,yB,iBCA3BD,EAAOC,QAAU,CAAC,KAAO,qB,gBCAzBD,EAAOC,QAAU,CAAC,YAAc,mC,gBCAhCD,EAAOC,QAAU,CAAC,SAAW,0BAA0B,QAAU,2B,sLCWlDC,EARA,SAACC,GACf,OACC,4BAAQC,UAAWC,IAAQC,QAC1B,yBAAKC,IAAKJ,EAAMK,IAAKC,IAAI,W,uBCYbC,EAfA,WACd,OACC,yBAAKN,UAAWC,IAAQM,KACvB,4BACC,wBAAIP,UAAWC,IAAQO,MAAM,kBAAC,IAAD,CAASC,GAAG,WAAWC,gBAAiBT,IAAQU,QAAhD,YAC7B,wBAAIX,UAAWC,IAAQO,MAAM,kBAAC,IAAD,CAASC,GAAG,WAAWC,gBAAiBT,IAAQU,QAAhD,YAC7B,wBAAIX,UAAWC,IAAQO,MAAvB,gBACA,wBAAIR,UAAWC,IAAQO,MAAvB,QACA,wBAAIR,UAAWC,IAAQO,MAAvB,SACA,wBAAIR,UAAWC,IAAQO,MAAvB,e,kCCMWI,EAhBF,SAACb,GAEb,OACC,yBAAKC,UAAWC,IAAQO,MACvB,yBACCL,IAAI,kEACJE,IAAI,WAEJN,EAAMc,QACP,6BACC,6CAAed,EAAMe,gBCcVC,EAvBC,WAEf,IAKMC,EALU,CACf,CAAEC,GAAI,EAAGJ,QAAS,mBAAoBC,WAAY,KAClD,CAAEG,GAAI,EAAGJ,QAAS,qBAAsBC,WAAY,OAGtBI,KAAI,SAAAC,GAAI,OAAI,kBAAC,EAAD,CAAMN,QAASM,EAAKN,QAASC,WAAYK,EAAKL,WAAYM,IAAKD,EAAKF,QAE/G,OACC,yBAAKjB,UAAWC,IAAQoB,SACvB,uCACA,yBAAKC,MAAO,CAACC,aAAc,SAC1B,8BAAUC,YAAY,gIACtB,6CAED,yBAAKxB,UAAWC,IAAQwB,OACtBT,K,iBCJUU,EAdK,WACnB,OACC,yBAAK1B,UAAWC,IAAQ0B,aACvB,gCACC,yBACCxB,IAAI,0EACJE,IAAG,YAGL,uDCCYuB,EATC,WACf,OACC,6BACC,kBAAC,EAAD,MACA,kBAAC,EAAD,Q,kCCMYC,EAVI,SAAC9B,GACnB,OACC,yBAAKC,UAAWC,IAAQ6B,QACvB,kBAAC,IAAD,CAASrB,GAAE,mBAAcV,EAAMkB,IAAMP,gBAAiBT,IAAQU,QAC5DZ,EAAMgC,Q,iBCDIC,EAJC,SAACjC,GAChB,OAAO,yBAAKC,UAAWC,IAAQY,SAAUd,EAAMc,UCgCjCoB,EA/BC,SAAClC,GAChB,IAeMmC,EAfY,CACjB,CAAEjB,GAAI,EAAGc,KAAM,8CACf,CAAEd,GAAI,EAAGc,KAAM,8CACf,CAAEd,GAAI,EAAGc,KAAM,gEACf,CAAEd,GAAI,EAAGc,KAAM,8CACf,CAAEd,GAAI,EAAGc,KAAM,8CACf,CAAEd,GAAI,EAAGc,KAAM,mCASmBb,KAAI,SAAAY,GAAM,OAAI,kBAAC,EAAD,CAAYC,KAAMD,EAAOC,KAAMd,GAAIa,EAAOb,GAAIG,IAAKU,EAAOb,QACrGkB,EAPY,CACjB,CAAClB,GAAI,EAAGJ,QAAS,wCACjB,CAACI,GAAI,EAAGJ,QAAS,iEACjB,CAACI,GAAI,EAAGJ,QAAS,6GAIkBK,KAAI,SAAAkB,GAAQ,OAAI,kBAAC,EAAD,CAASL,KAAMK,EAASA,SAAUnB,GAAImB,EAASnB,GAAIG,IAAKgB,EAASnB,QAErH,OACC,yBAAKjB,UAAWC,IAAQoC,SACvB,yBAAKrC,UAAWC,IAAQqC,cACtBJ,GAEF,yBAAKlC,UAAWC,IAAQsC,UACtBJ,K,OCNUK,EAhBH,WACX,OACC,kBAAC,IAAD,KACC,yBAAKxC,UAAU,eACd,kBAAC,EAAD,CAAQI,IAAI,wCACZ,kBAAC,EAAD,MACA,yBAAKJ,UAAU,uBACd,kBAAC,IAAD,CAAOyC,KAAK,WAAWC,UAAWd,IAClC,kBAAC,IAAD,CAAOa,KAAK,WAAWC,UAAWT,QCJnBU,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAM/C,c","file":"static/js/main.cf1c089e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__2UZlG\",\"item\":\"Navbar_item__2zOV5\",\"active\":\"Navbar_active__33t2P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__3G4CN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"myPosts\":\"MyPosts_myPosts__13Pyj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog\":\"DialogItem_dialog__1-HE-\",\"active\":\"DialogItem_active__1oVU5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3GLLw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__MOCE5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileInfo\":\"ProfileInfo_profileInfo__2mdIo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messages\":\"Message_messages__1EC_y\",\"message\":\"Message_message__2xzw6\"};","import React from \"react\";\r\nimport classes from \"./Header.module.css\"\r\n\r\n\r\nconst Header = (props) => {\r\n\treturn (\r\n\t\t<header className={classes.header}>\r\n\t\t\t<img src={props.img} alt=\"logo\" />\r\n\t\t</header>\r\n\t);\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport classes from \"./Navbar.module.css\";\r\n\r\nconst Navbar = () => {\r\n\treturn (\r\n\t\t<nav className={classes.nav}>\r\n\t\t\t<ul>\r\n\t\t\t\t<li className={classes.item}><NavLink to=\"/profile\" activeClassName={classes.active}>Profile</NavLink></li>\r\n\t\t\t\t<li className={classes.item}><NavLink to=\"/dialogs\" activeClassName={classes.active}>Message</NavLink></li>\r\n\t\t\t\t<li className={classes.item}>Main content</li>\r\n\t\t\t\t<li className={classes.item}>News</li>\r\n\t\t\t\t<li className={classes.item}>Music</li>\r\n\t\t\t\t<li className={classes.item}>Settings</li>\r\n\t\t\t</ul>\r\n\t\t</nav>\r\n\t);\r\n};\r\n\r\nexport default Navbar;","import React from \"react\";\r\nimport classes from \"./Post.module.css\";\r\n\r\nconst Post = (props) => {\r\n\r\n\treturn (\r\n\t\t<div className={classes.item}>\r\n\t\t\t<img\r\n\t\t\t\tsrc=\"https://www.paulseward.com/downloads/Avatars/cartoon_avatar.png\"\r\n\t\t\t\talt=\"avatar\"\r\n\t\t\t/>\r\n\t\t\t{props.message}\r\n\t\t\t<div>\r\n\t\t\t\t<span>{`Like ${props.likesCount}`}</span>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Post;","import React from \"react\";\r\nimport classes from \"./MyPosts.module.css\";\r\nimport Post from \"./Post/Post\";\r\n\r\nconst MyPosts = () => {\r\n\r\n\tlet postsData = [\r\n\t\t{ id: 1, message: \"Hi, how are you?\", likesCount: \"9\" },\r\n\t\t{ id: 2, message: \"It's my first post\", likesCount: \"15\" },\r\n\t]\r\n\r\n\tconst postElements = postsData.map(post => <Post message={post.message} likesCount={post.likesCount} key={post.id}/>)\r\n\r\n\treturn (\r\n\t\t<div className={classes.myPosts}>\r\n\t\t\t<h3>My post</h3>\r\n\t\t\t<div style={{marginBottom: \"20px\"}}>\r\n\t\t\t\t<textarea placeholder=\"Укажите ваш текст поста\"></textarea>\r\n\t\t\t\t<button>Add post</button>\r\n\t\t\t</div>\r\n\t\t\t<div className={classes.posts}>\r\n\t\t\t\t{postElements}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default MyPosts;","import React from \"react\";\r\nimport classes from \"./ProfileInfo.module.css\";\r\n\r\nconst ProfileInfo = () => {\r\n\treturn (\r\n\t\t<div className={classes.profileInfo}>\r\n\t\t\t<figure>\r\n\t\t\t\t<img\r\n\t\t\t\t\tsrc=\"https://wowslider.net/local-sliders/demo-10/data1/images/road220058.jpg\"\r\n\t\t\t\t\talt={`qweqwe`}\r\n\t\t\t\t/>\r\n\t\t\t</figure>\r\n\t\t\t<div>avatar + description</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default ProfileInfo;\r\n","import React from \"react\";\r\nimport MyPosts from \"./MyPosts/MyPosts\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\n\r\nconst Profile = () => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<ProfileInfo />\r\n\t\t\t<MyPosts />\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport classes from \"./DialogItem.module.css\";\r\n\r\nconst DialogItem = (props) => {\r\n\treturn (\r\n\t\t<div className={classes.dialog}>\r\n\t\t\t<NavLink to={`/dialogs/${props.id}`} activeClassName={classes.active}>\r\n\t\t\t\t{props.name}\r\n\t\t\t</NavLink>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default DialogItem;\r\n","import React from \"react\";\r\nimport classes from \"./Message.module.css\";\r\n\r\nconst Message = (props) => {\r\n\treturn <div className={classes.message}>{props.message}</div>;\r\n};\r\n\r\nexport default Message;\r\n","import React from \"react\";\r\nimport classes from \"./Dialogs.module.css\";\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\n\r\nconst Dialogs = (props) => {\r\n\tlet dialogsData = [\r\n\t\t{ id: 1, name: \"Татьяна\" },\r\n\t\t{ id: 2, name: \"Николай\" },\r\n\t\t{ id: 3, name: \"Александра\" },\r\n\t\t{ id: 4, name: \"Евгений\" },\r\n\t\t{ id: 5, name: \"Дмитрий\" },\r\n\t\t{ id: 6, name: \"Мария\" },\r\n\t];\r\n\r\n\tlet messageData = [\r\n\t\t{id: 1, message: \"Привет\"},\r\n\t\t{id: 2, message: \"Добрый день\"},\r\n\t\t{id: 3, message: \"Разработка на реакт\"},\r\n\t]\r\n\r\n\tconst dialogElements = dialogsData.map(dialog => <DialogItem name={dialog.name} id={dialog.id} key={dialog.id} />);\r\n\tconst messageElements = messageData.map(maessage => <Message name={maessage.maessage} id={maessage.id} key={maessage.id} />);\r\n\r\n\treturn (\r\n\t\t<div className={classes.dialogs}>\r\n\t\t\t<div className={classes.dialogsItems}>\r\n\t\t\t\t{dialogElements}\r\n\t\t\t</div>\r\n\t\t\t<div className={classes.messages}>\r\n\t\t\t\t{messageElements}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Dialogs;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport Header from \"./components/Header/Header\";\nimport Navbar from \"./components/Navbar/Navbar\";\nimport Profile from \"./components/Profile/Profile\";\nimport Dialogs from \"./components/Dialogs/Dialogs\";\nimport { BrowserRouter, Route } from \"react-router-dom\";\n\nconst App = () => {\n\treturn (\n\t\t<BrowserRouter>\n\t\t\t<div className=\"app-wrapper\">\n\t\t\t\t<Header img=\"https://bower.io/img/bower-logo.png\" />\n\t\t\t\t<Navbar />\n\t\t\t\t<div className=\"app-wrapper-content\">\n\t\t\t\t\t<Route path=\"/profile\" component={Profile} />\n\t\t\t\t\t<Route path=\"/dialogs\" component={Dialogs} />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</BrowserRouter>\n\n\t);\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}